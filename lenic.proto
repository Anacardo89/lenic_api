syntax = "proto3";

package lenic;
option go_package = "github.com/anacardo89/lenic_api/internal/pb";

service Lenic {
  rpc Login(LoginRequest) returns (LoginResponse);
  // CreateUser message User{2, 3, 4}
  rpc CreateUser(User) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (User);
  rpc SearchUsers(SearchUsersRequest) returns (stream User);
  rpc GetUserFollowers(GetUserFollowersRequest) returns (stream User);
  rpc GetUserFollowing(GetUserFollowingRequest) returns (stream User);
  rpc FollowUser(FollowUserRequest) returns (FollowUserResponse);
  rpc AcceptFollow(AcceptFollowRequest) returns (AcceptFollowResponse);
  rpc UnfollowUser(UnfollowRequest) returns (UnfollowUserResponse);
  // UpdateUserPass message User{2, 4}
  rpc UpdateUserPass(User) returns (UpdateUserPassResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  // StartConversation message Conversation{2, 3}
  rpc StartConversation(Conversation) returns (StartConversationResponse);
  rpc GetUserConversations(GetUserConversationsRequest) returns (stream Conversation);
  rpc ReadConversation(ReadConversationRequest) returns (ReadConversationResponse);
  // SendDM message DM{2, 3, 4}
  rpc SendDM(DM) returns (SendDMResponse);
  rpc GetConversationDMs(GetConversationDMsRequest) returns (stream DM);
  // CreatePost message Post{3, 4, 5, 8}
  rpc CreatePost(Post) returns (CreatePostResponse);
  rpc GetPost(GetPostRequest) returns (Post);
  rpc GetUserPosts(GetUserPostsRequest) returns (stream Post);
  rpc GetUserPublicPosts(GetUserPublicPostsRequest) returns (stream Post);
  rpc GetFeed(GetFeedRequest) returns (stream Post);
  rpc RatePostUp(PostRating) returns (RatePostUpResponse);
  rpc RatePostDown(PostRating) returns (RatePostDownResponse);
  // UpdatePost message Post{2, 4, 5, 8}
  rpc UpdatePost(Post) returns (UpdatePostResponse);
  rpc DeletePost(DeletePostRequest) returns (DeletePostResponse);
  // CreateComment message Comment{2, 3, 4}
  rpc CreateComment(Comment) returns (CreateCommentResponse);
  rpc GetComment(GetCommentRequest) returns (Comment);
  rpc GetCommentsFromPost(GetCommentsFromPostRequest) returns (stream Comment);
  rpc RateCommentUp(CommentRating) returns (RateCommentUpResponse);
  rpc RateCommentDown(CommentRating) returns (RateCommentDownResponse);
  // UpdateComment message Comment{1, 4}
  rpc UpdateComment(Comment) returns (UpdateCommentResponse);
  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse);
}


// Login
message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
}


// User
message User {
  int32 id = 1;
  string username = 2;
  string email = 3;
  string pass = 4;
  string hashpass = 5;
  int32 user_followers = 6;
  int32 user_following = 7;
  string created_at = 8;
  string updated_at = 9;
  int32 active = 10;
}

message CreateUserResponse {
  int32 id = 1;
}

message GetUserRequest {
  string username = 1;
}

message SearchUsersRequest {
  string username = 1;
}

message GetUserFollowersRequest {
  string username = 1;
}

message GetUserFollowingRequest {
  string username = 1;
}

message UpdateUserPassResponse {
  // OK/NOK
  string response = 1;
}

message DeleteUserRequest {
  string username = 1;
}

message DeleteUserResponse {
  // OK/NOK
  string response = 1;
}


// Follow
message FollowUserRequest {
  int32 follower_id = 1;
  int32 followed_id = 2;
}

message FollowUserResponse {
  // OK/NOK
  string response = 1;
}

message AcceptFollowRequest {
  int32 follower_id = 1;
  int32 followed_id = 2;
}

message AcceptFollowResponse {
  // OK/NOK
  string response = 1;
}

message UnfollowRequest {
  int32 follower_id = 1;
  int32 followed_id = 2;
}

message UnfollowUserResponse {
  // OK/NOK
  string response = 1;
}


// Conversation
message Conversation {
  int32 id = 1;
  int32 user1_id = 2;
  int32 user2_id = 3;
  string created_at = 4;
  string updated_at = 5;
}

message StartConversationResponse {
  int32 id = 1;
}

message GetUserConversationsRequest {
  string username = 1;
}

message ReadConversationRequest {
  int32 id = 1;
}

message ReadConversationResponse {
  // OK/NOK
  string response = 1;
}


// DMs
message DM {
  int32 id = 1;
  int32 conversation_id = 2;
  int32 sender_id = 3;
  string content = 4;
  bool is_read = 5;
  string created_at = 6;
}

message SendDMResponse {
  int32 id = 1;
}

message GetConversationDMsRequest {
  int32 id = 1;
}


// Post
message Post {
  int32 id = 1;
  string post_guid = 2;
  int32 author_id = 3;
  string title = 4;
  string content = 5;
  string created_at = 6;
  string updated_at = 7;
  bool is_public = 8;
  int32 rating = 9;
  bool active = 10;
}

message CreatePostResponse {
  string uuid = 1;
}

message GetPostRequest {
  string uuid = 1;
}

message GetUserPostsRequest {
  string username = 1;
}

message GetUserPublicPostsRequest {
  string username = 1;
}

message GetFeedRequest {
  string username = 1;
}

message UpdatePostResponse {
  // OK/NOK
  string response = 1;
}

message DeletePostRequest {
  string uuid = 1;
}

message DeletePostResponse {
  // OK/NOK
  string response = 1;
}


// Post Rating
message PostRating {
  int32 post_id = 1;
  int32 user_id = 2;
}

message RatePostUpResponse {
  // OK/NOK
  string response = 1;
}

message RatePostDownResponse {
  // OK/NOK
  string response = 1;
}

// Comment
message Comment {
  int32 id = 1;
  string post_guid = 2;
  int32 author_id = 3;
  string content = 4;
  string created_at = 5;
  string updated_at = 6;
  int32 rating = 7;
  bool active = 8; 
}

message CreateCommentResponse {
  int32 id = 1;
}

message GetCommentRequest {
  int32 id = 1;
}

message GetCommentsFromPostRequest {
  string uuid = 1;
}

message UpdateCommentResponse {
  // OK/NOK
  string response = 1;
}

message DeleteCommentRequest {
  int32 id = 1;
}

message DeleteCommentResponse {
  // OK/NOK
  string response = 1;
}

// Comment Rating
message CommentRating {
  int32 comment_id = 1;
  int32 user_id = 2;
}

message RateCommentUpResponse {
  // OK/NOK
  string response = 1;
}

message RateCommentDownResponse {
  // OK/NOK
  string response = 1;
}